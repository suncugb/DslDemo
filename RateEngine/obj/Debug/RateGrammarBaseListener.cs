//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.5.3
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from D:\my documents\visual studio 2013\Projects\RateEngine\RateEngine\RateGrammar.g4 by ANTLR 4.5.3

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

namespace RateEngine {

using Antlr4.Runtime.Misc;
using IErrorNode = Antlr4.Runtime.Tree.IErrorNode;
using ITerminalNode = Antlr4.Runtime.Tree.ITerminalNode;
using IToken = Antlr4.Runtime.IToken;
using ParserRuleContext = Antlr4.Runtime.ParserRuleContext;

/// <summary>
/// This class provides an empty implementation of <see cref="IRateGrammarListener"/>,
/// which can be extended to create a listener which only needs to handle a subset
/// of the available methods.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.5.3")]
[System.CLSCompliant(false)]
public partial class RateGrammarBaseListener : IRateGrammarListener {
	/// <summary>
	/// Enter a parse tree produced by <see cref="RateGrammarParser.compileUnit"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCompileUnit([NotNull] RateGrammarParser.CompileUnitContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RateGrammarParser.compileUnit"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCompileUnit([NotNull] RateGrammarParser.CompileUnitContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="RateGrammarParser.case_head"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCase_head([NotNull] RateGrammarParser.Case_headContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RateGrammarParser.case_head"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCase_head([NotNull] RateGrammarParser.Case_headContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="RateGrammarParser.left_parktime"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterLeft_parktime([NotNull] RateGrammarParser.Left_parktimeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RateGrammarParser.left_parktime"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitLeft_parktime([NotNull] RateGrammarParser.Left_parktimeContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="RateGrammarParser.right_parktime"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterRight_parktime([NotNull] RateGrammarParser.Right_parktimeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RateGrammarParser.right_parktime"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitRight_parktime([NotNull] RateGrammarParser.Right_parktimeContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="RateGrammarParser.left_time"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterLeft_time([NotNull] RateGrammarParser.Left_timeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RateGrammarParser.left_time"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitLeft_time([NotNull] RateGrammarParser.Left_timeContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="RateGrammarParser.middle_time"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterMiddle_time([NotNull] RateGrammarParser.Middle_timeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RateGrammarParser.middle_time"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitMiddle_time([NotNull] RateGrammarParser.Middle_timeContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="RateGrammarParser.right_time"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterRight_time([NotNull] RateGrammarParser.Right_timeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RateGrammarParser.right_time"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitRight_time([NotNull] RateGrammarParser.Right_timeContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="RateGrammarParser.workday"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterWorkday([NotNull] RateGrammarParser.WorkdayContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RateGrammarParser.workday"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitWorkday([NotNull] RateGrammarParser.WorkdayContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="RateGrammarParser.case_condition"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCase_condition([NotNull] RateGrammarParser.Case_conditionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RateGrammarParser.case_condition"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCase_condition([NotNull] RateGrammarParser.Case_conditionContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="RateGrammarParser.value"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterValue([NotNull] RateGrammarParser.ValueContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RateGrammarParser.value"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitValue([NotNull] RateGrammarParser.ValueContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="RateGrammarParser.parameter"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterParameter([NotNull] RateGrammarParser.ParameterContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RateGrammarParser.parameter"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitParameter([NotNull] RateGrammarParser.ParameterContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="RateGrammarParser.api"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterApi([NotNull] RateGrammarParser.ApiContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RateGrammarParser.api"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitApi([NotNull] RateGrammarParser.ApiContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="RateGrammarParser.case_body"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCase_body([NotNull] RateGrammarParser.Case_bodyContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RateGrammarParser.case_body"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCase_body([NotNull] RateGrammarParser.Case_bodyContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="RateGrammarParser.case_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCase_expression([NotNull] RateGrammarParser.Case_expressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RateGrammarParser.case_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCase_expression([NotNull] RateGrammarParser.Case_expressionContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="RateGrammarParser.case_expressions"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCase_expressions([NotNull] RateGrammarParser.Case_expressionsContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RateGrammarParser.case_expressions"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCase_expressions([NotNull] RateGrammarParser.Case_expressionsContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="RateGrammarParser.limit_head"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterLimit_head([NotNull] RateGrammarParser.Limit_headContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RateGrammarParser.limit_head"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitLimit_head([NotNull] RateGrammarParser.Limit_headContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="RateGrammarParser.limit_condition"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterLimit_condition([NotNull] RateGrammarParser.Limit_conditionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RateGrammarParser.limit_condition"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitLimit_condition([NotNull] RateGrammarParser.Limit_conditionContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="RateGrammarParser.limit_body"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterLimit_body([NotNull] RateGrammarParser.Limit_bodyContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RateGrammarParser.limit_body"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitLimit_body([NotNull] RateGrammarParser.Limit_bodyContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="RateGrammarParser.limit_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterLimit_expression([NotNull] RateGrammarParser.Limit_expressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RateGrammarParser.limit_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitLimit_expression([NotNull] RateGrammarParser.Limit_expressionContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="RateGrammarParser.limit_expressions"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterLimit_expressions([NotNull] RateGrammarParser.Limit_expressionsContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RateGrammarParser.limit_expressions"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitLimit_expressions([NotNull] RateGrammarParser.Limit_expressionsContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="RateGrammarParser.cartype_head"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCartype_head([NotNull] RateGrammarParser.Cartype_headContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RateGrammarParser.cartype_head"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCartype_head([NotNull] RateGrammarParser.Cartype_headContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="RateGrammarParser.cartype_body"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCartype_body([NotNull] RateGrammarParser.Cartype_bodyContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RateGrammarParser.cartype_body"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCartype_body([NotNull] RateGrammarParser.Cartype_bodyContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="RateGrammarParser.cartype_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCartype_expression([NotNull] RateGrammarParser.Cartype_expressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RateGrammarParser.cartype_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCartype_expression([NotNull] RateGrammarParser.Cartype_expressionContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="RateGrammarParser.cartype_expressions"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCartype_expressions([NotNull] RateGrammarParser.Cartype_expressionsContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RateGrammarParser.cartype_expressions"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCartype_expressions([NotNull] RateGrammarParser.Cartype_expressionsContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="RateGrammarParser.configfile"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterConfigfile([NotNull] RateGrammarParser.ConfigfileContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RateGrammarParser.configfile"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitConfigfile([NotNull] RateGrammarParser.ConfigfileContext context) { }

	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void EnterEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void ExitEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitTerminal([NotNull] ITerminalNode node) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitErrorNode([NotNull] IErrorNode node) { }
}
} // namespace RateEngine
